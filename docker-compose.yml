version: "3.8"
services:
  api-gateway:
    hostname: $API_GATEWAY_HOST
    container_name: api-gateway
    restart: always
    env_file:
      - .env
    build:
      context: ./featured-content-api
      dockerfile: Dockerfile.api-gateway
    image:  api-gateway-microservice
    ports:
      - 127.0.0.1:$BACKEND_PORT:$BACKEND_PORT
    depends_on:
      - libretranslate
      - redis
      - rabbit-mq
    networks:
      - app-network
  featured-content:
    container_name: featured-content-microservice
    restart: always
    env_file:
      - .env
    build:
      context: ./featured-content-api
      dockerfile: Dockerfile.featured-content
    image:  featured-content-microservice
    depends_on:
      - api-gateway
      - libretranslate
      - redis
      - rabbit-mq
    networks:
      - app-network
  translation:
    container_name: translation-microservice
    restart: always
    env_file:
      - .env
    build:
      context: ./featured-content-api
      dockerfile: Dockerfile.translation
    image:  translation-microservice
    depends_on:
      - api-gateway
      - libretranslate
      - redis
      - rabbit-mq
    networks:
      - app-network
  front-end:
    container_name: frontend-webapp
    restart: always
    build:
      context: ./featured-content-frontend
    image: web-app
    ports:
      - $CLIENT_PORT:3000 
    environment:
      - REACT_APP_API_URL=$REACT_APP_API_URL
      - CLIENT_PORT=$CLIENT_PORT
    depends_on:
      - api-gateway
    networks:
      - app-network
  rabbit-mq:
    container_name: rabbit-mq
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - $RMQ_MGMT_PORT:15672 
      - $RMQ_PORT:5672
    tty: true
    networks:
      - app-network
  redis:
    container_name: redis
    image: redis/redis-stack-server:latest
    restart: unless-stopped
    ports:
      - $REDIS_PORT:6379 
    tty: true
    networks:
      - app-network
  libretranslate:
    container_name: libretranslate
    image: libretranslate/libretranslate:latest
    restart: unless-stopped
    ports:
      - $TRANSLATION_SERVICE_PORT:5000
    healthcheck:
      test: ['CMD-SHELL', './venv/bin/python scripts/healthcheck.py']
    tty: true
    environment:
      LT_LOAD_ONLY: en,de,es
      LT_FRONTEND_LANGUAGE_SOURCE: 'auto'
      LT_FRONTEND_LANGUAGE_TARGET: 'en'
      LT_SUGGESTIONS: true
      LT_DEBUG: true
      TRANSLATION_SERVICE_PORT: $TRANSLATION_SERVICE_PORT
    volumes:
      - ./data/argos-translate:/home/libretranslate/.local/share/argos-translate
    networks:
      - app-network
networks:
  app-network:
volumes:
  uploads: {}
  data: {}
